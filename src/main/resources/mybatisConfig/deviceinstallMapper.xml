<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fastrun.TempCollection.dal.DeviceinstallMapper">

    <resultMap type="com.fastrun.TempCollection.model.Deviceinstall" id="deviceinstallrecordMap">
        <id column="id" property="id"/>
        <result column="PositionID" property="positionID"/>
        <result column="DeviceID" property="deviceID"/>
        <result column="Installed" property="installed"/>
        <result column="WorkState" property="workState"/>
        <result column="Status" property="status"/>
        <result column="CreaterID" property="createrID"/>
        <result column="CreateTime" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`,`PositionID`,`DeviceID`,`Installed`,`WorkState`,`Status`,`CreaterID`,`CreateTime`
    </sql>

    <select id="getPaging" resultType="com.fastrun.TempCollection.model.Deviceinstall"
            resultMap="deviceinstallrecordMap">
        SELECT dir.*,d.DeviceSN AS deviceSN,d.TypeName AS typeName, d.Parameter1 AS parameter1, d.Parameter2 AS parameter2, d.interlave AS interlave, d.Level AS level,
        d.EquipmentChipID AS equipmentChipID, d.CommunicationCard AS communicationCard, d.EquipmentPhone AS equipmentPhone, d.Remark AS remark,
        c.id AS customerID, c.`Name` AS customerName,c.`PhoneNumber` AS phoneNumber,
        r.SubNumber AS subNumber,r.FloorNumber AS floorNumber,r.ApartNumber AS apartNumber,r.RoomName AS roomName,r.ExactPosition AS exactPosition,
        b.`id` AS buildingID,b.`Name` AS buildingName,b.BuildingNo AS buildingNo,
        com.`id` AS communityID,com.`Name` AS communityName,
        hes.`id` AS hesID,hes.`Name` AS hesName,
        Company.`id` AS companyID,Company.`Name` AS companyName
        from DeviceInstallRecord dir
        LEFT JOIN Device d ON dir.DeviceID=d.id
        LEFT JOIN Position r ON dir.PositionID=r.id
        LEFT JOIN Customer c ON r.CustomerID=c.id
        LEFT JOIN Community com ON r.CommunityID=com.id
        LEFT JOIN Building b ON r.BuildingID=b.id
        LEFT JOIN HeatExchangeStation hes ON com.StationID=hes.id
        LEFT JOIN Company ON hes.CompanyID=Company.id WHERE dir.`Status`!=3
        <if test="deviceSN!=''">
            and d.`DeviceSN` = #{deviceSN}
        </if>
        <if test="customerName!=''">
            and c.`Name` LIKE '%${customerName}%'
        </if>
        <if test="phoneNumber!=''">
            and c.`PhoneNumber` LIKE '%${phoneNumber}%'
        </if>
        <if test="companyID!=-1">
            and Company.`id` = #{companyID}
        </if>
        <if test="stationID!=-1">
            and hes.`id` = #{stationID}
        </if>
        <if test="communityID!=-1">
            and com.`id` = #{communityID}
        </if>
        <if test="buildingID!=-1">
            and b.`id` = #{buildingID}
        </if>
        <if test="roomID!=-1">
            and r.`id` = #{roomID}
        </if>
        order by ${orderBy} limit #{offset},#{pageSize}
    </select>

    <select id="get" resultType="com.fastrun.TempCollection.model.Deviceinstall" resultMap="deviceinstallrecordMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM DeviceInstallRecord WHERE id=#{id}
    </select>

    <update id="update" parameterType="com.fastrun.TempCollection.model.Deviceinstall"
            flushCache="true"
            statementType="PREPARED"
            timeout="20">
        Update DeviceInstallRecord
        <set>
            <if test="model.positionID!=null">
                `PositionID`=#{model.positionID},
            </if>
            <if test="model.deviceID!=null">
                `DeviceID`=#{model.deviceID},
            </if>
            <if test="model.installed!=null">
                `Installed`=#{model.installed},
            </if>
            <if test="model.workState!=null">
                `WorkState`=#{model.workState},
            </if>
            <if test="model.status!=null">
                `Status`=#{model.status},
            </if>
            <if test="model.createrID!=null">
                `CreaterID`=#{model.createrID},
            </if>
            <if test="model.createTime!=null">
                `CreateTime`=#{model.createTime},
            </if>
        </set>
        WHERE id=#{model.id}
    </update>

    <update id="delete" parameterType="java.lang.Integer" statementType="PREPARED"
            timeout="20">
        update DeviceInstallRecord set Status=3 WHERE id=#{id}
    </update>

    <insert id="insert" parameterType="com.fastrun.TempCollection.model.Deviceinstall"
            flushCache="true"
            statementType="PREPARED"
            keyProperty="id"
            keyColumn=""
            useGeneratedKeys="true"
            timeout="20">
        INSERT INTO DeviceInstallRecord(`PositionID`,`DeviceID`,`Installed`,`WorkState`,`Status`,`CreaterID`,`CreateTime`) VALUES(#{model.positionID},#{model.deviceID},#{model.installed},#{model.workState},#{model.status},#{model.createrID},#{model.createTime})
    </insert>

    <select id="getCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*) from DeviceInstallRecord dir
                                 LEFT JOIN Device d ON dir.DeviceID=d.id
                                 LEFT JOIN Position r ON dir.PositionID=r.id
                                 LEFT JOIN Customer c ON r.CustomerID=c.id
                                 LEFT JOIN Community com ON r.CommunityID=com.id
                                 LEFT JOIN Building b ON r.BuildingID=b.id
                                 LEFT JOIN HeatExchangeStation hes ON com.StationID=hes.id
                                 LEFT JOIN Company ON hes.CompanyID=Company.id
    </select>
</mapper>

