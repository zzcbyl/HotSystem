<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fastrun.TempCollection.dal.UserMapper">

    <resultMap type="com.fastrun.TempCollection.model.User" id="userMap">
        <id column="id" property="id" />
        <result column="realName" property="realName" />
        <result column="account" property="account" />
        <result column="password" property="password" />
        <result column="mobile" property="mobile" />
        <result column="qq" property="qq" />
        <result column="weixin" property="weixin" />
        <result column="type" property="type" />
        <result column="state" property="state" />
        <result column="createTime" property="createTime" />
        <result column="balance"  property="balance" />
        <result column="mobileBalance"  property="mobileBalance" />
        <result column="startTime" property="startTime" />
        <result column="endTime" property="endTime" />
        <result column="availableLength" property="availableLength" />
    </resultMap>

    <sql id="Base_Column_List">
        `id`,`account`,`password`,`realName`,`mobile`,`qq`,`weixin`,`createTime`,`type`,`state`,`balance`,`mobileBalance`,`startTime`,`endTime`,`availableLength`
    </sql>

    <select id="getPaging" resultType="com.fastrun.TempCollection.model.User" resultMap="userMap">
       SELECT
        <include refid="Base_Column_List" />
        FROM user
       <where>
           <if test="realName!=null and realName!=''">
                realName like concat('%',#{realName},'%')
           </if>
           and state!=-1 and type=1
       </where>
        order by ${orderBy} limit #{offset},#{pageSize}
    </select>

    <select id="get" resultType="com.fastrun.TempCollection.model.User" resultMap="userMap">
      SELECT
        <include refid="Base_Column_List" />
       FROM user WHERE ID=#{id}
    </select>

    <update id="update" parameterType="com.fastrun.TempCollection.model.User"
            flushCache="true"
            statementType="PREPARED"
            timeout="20">
       Update user
        <set>
           <if test="user.realName!=null and user.realName!=''">
               realName=#{user.realName},
           </if>
            <if test="user.mobile!=null and user.mobile!=''">
                mobile=#{user.mobile},
            </if>
            <if test="user.qq!=null and user.qq!=''">
                qq=#{user.qq},
            </if>
            <if test="user.weixin!=null and user.weixin!=''">
                weixin=#{user.weixin},
            </if>
            <if test="user.state!=null">
                state=#{user.state},
            </if>
            <if test="user.mobileBalance != null">
                mobileBalance=#{user.mobileBalance},
            </if>
            <if test="user.startTime!=null">
                `startTime`=#{user.startTime},
            </if>
            <if test="user.endTime!=null">
                `endTime`=#{user.endTime},
            </if>
            <if test="user.availableLength!=null">
                `availableLength`=#{user.availableLength},
            </if>
        </set>
        where id=#{user.id}
    </update>

    <update id="changPassword"  flushCache="true"
            statementType="PREPARED"
            timeout="20">
        Update `user`
        <set>
        `Password`=#{password}
       </set>
        <where>
            `id`=#{id}
        </where>
    </update>

    <update id="delete" parameterType="java.lang.Integer" statementType="PREPARED"
            timeout="20">
        update user set state=-1 where id=#{id}
    </update>

    <insert id="insertUser" parameterType="com.fastrun.TempCollection.model.User"
            flushCache="true"
            statementType="PREPARED"
            keyProperty="id"
            keyColumn=""
            useGeneratedKeys="true"
            timeout="20">
        INSERT INTO user(account,PASSWORD,realName,mobile,qq,weixin,`type`,mobileBalance,`startTime`,`endTime`,`availableLength`) VALUES(#{user.account},#{user.password},#{user.realName},#{user.mobile},#{user.qq},#{user.weixin},#{user.type},#{user.mobileBalance},#{user.startTime},#{user.endTime},#{user.availableLength})
    </insert>

    <select id="findByAccount" parameterType="java.lang.String"  resultMap="userMap">
       SELECT
        <include refid="Base_Column_List" />
        FROM user WHERE  state!=-1 and  account=#{account} limit 1
    </select>

    <select id="findByUserName" parameterType="java.lang.String" resultMap="userMap">
        SELECT
        <include refid="Base_Column_List" />
         FROM user WHERE  state!=-1 and  realName=#{realName}
    </select>

    <select id="getCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*) FROM user
        <where>
            <if test="realName!=null and realName!=''">
                 realName like concat('%',#{realName},'%')
            </if>
            and state!=-1 and type=1
        </where>
    </select>

    <update id="changBalance" statementType="PREPARED"
            timeout="50" >
        update user set balance=balance+#{money} where id=#{id};
    </update>

</mapper>