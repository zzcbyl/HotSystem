buildscript {
	ext {
		kotlinVersion = '1.2.41'
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		//        Kotlin整合SpringBoot的默认无参构造函数，默认把所有的类设置open类插件
		classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')

	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

jar {
	baseName = 'custom-service'
	version = '1.0.0'
}

// tag::task[] task
 task buildDocker(type: Docker, dependsOn: build) {
push = true
applicationName = jar.baseName
dockerfile = file('src/main/docker/Dockerfile')
doFirst {
	copy {
		from jar
		into stageDir
	}
}
}
// end::task[]

task wrapper(type: Wrapper) {
	gradleVersion = '4.4-rc-3'
}
group = 'com.fastrun'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


dependencies {
	compile('io.jsonwebtoken:jjwt:0.6.0')
	compile 'com.auth0:java-jwt:1.0.0'
	/*compile(group: 'com.auth0', name: 'java-jwt')*/
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	compileOnly "org.springframework.boot:spring-boot-configuration-processor"
	/*testCompile('org.springframework.boot:spring-boot-starter-test')*/
	compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
}
